import exp from 'constants';
import { createRequire } from 'module';
const require = createRequire(import.meta.url);
const OpenAI = require("@langchain/openai").OpenAI;
const PromptTemplate = require("@langchain/core/prompts").PromptTemplate;
const CommaSeparatedListOutputParser = require("@langchain/core/output_parsers").CommaSeparatedListOutputParser;
const RunnableSequence = require("@langchain/core/runnables").RunnableSequence;
const dotenv= require('dotenv')

dotenv.config()

//Generate ideas for apis from schema
//takes in schema generated by langchain and query by user
const getAPIIdeas = async (schema) => {
  // With a `CommaSeparatedListOutputParser`, we can parse a comma separated list.
  const parser = new CommaSeparatedListOutputParser();

  const chain = RunnableSequence.from([
    PromptTemplate.fromTemplate("Give me a comma seperate list of API Ideas with to Give An API Based on a MongoDb Schema Full CRUD capability. Be specific with API ideas. This is the Mongoose Schema to base your list off of: {schema}.\n{format_instructions}"),
    new OpenAI({ temperature: 1.0, maxTokens:3000, modelName: "gpt-4"}),
    parser,
  ]);

  console.log("running chain")

  let response = await chain.invoke({
    schema: schema,
    format_instructions: "Return a comma seperated list.",
  });

  return response.splice(0, 3);

};

export default getAPIIdeas;

